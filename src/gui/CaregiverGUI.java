package gui;

import javax.swing.table.DefaultTableModel;
import javax.xml.ws.BindingProvider;
import org.json.JSONArray;
import ws.Caregiverws;
import ws.Caregiverws_Service;

public class CaregiverGUI extends javax.swing.JFrame {
    
    private static Caregiverws caregiverwsProxy;
    private static AddPerson addPerson;
    
    public HealthMonitoringGUI healthMonitoringGUI;
    public MedicationsMonitoringGUI medicationsMonitoringGUI;
    public DoctorAppointmentGUI doctorAppointmentGUI;

    public static Caregiverws getCaregiverwsProxy() {
        return caregiverwsProxy;
    }

    public CaregiverGUI() {
        initComponents();
        initConnection();
        updateTable8();
    }
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable8 = new javax.swing.JTable();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Time Schedule", "Blood Pressure", "Blood Sugar", "Heart Beat", "Notes"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTable5);

        jButton7.setText("Add");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Edit");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Delete");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jButton7)
                .addGap(18, 18, 18)
                .addComponent(jButton8)
                .addGap(18, 18, 18)
                .addComponent(jButton9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton8)
                    .addComponent(jButton9))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Health Monitoring", jPanel4);

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Time Schedule", "Medication Name", "Dose"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jTable6);

        jButton4.setText("Add");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Edit");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Delete");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jButton4)
                .addGap(18, 18, 18)
                .addComponent(jButton5)
                .addGap(18, 18, 18)
                .addComponent(jButton6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Medications Monitoring", jPanel5);

        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Time Schedule", "Doctor Name", "Notes"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(jTable7);

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Doctor Appointment", jPanel6);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Username", "First Name", "Last Name", "E-Mail Address", "Mobile Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton19.setText("Add");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jButton20.setText("Edit");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jButton21.setText("Delete");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jButton19)
                .addGap(18, 18, 18)
                .addComponent(jButton20)
                .addGap(18, 18, 18)
                .addComponent(jButton21)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton19)
                    .addComponent(jButton20)
                    .addComponent(jButton21))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Caregivers", jPanel7);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Username", "First Name", "Last Name", "E-Mail Address", "Mobile Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton22.setText("Add");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jButton23.setText("Edit");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jButton24.setText("Delete");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jButton22)
                .addGap(18, 18, 18)
                .addComponent(jButton23)
                .addGap(18, 18, 18)
                .addComponent(jButton24)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton22)
                    .addComponent(jButton23)
                    .addComponent(jButton24))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Family Members", jPanel8);

        jTable8.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Username", "First Name", "Last Name", "E-Mail Address", "Mobile Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable8.getSelectionModel().addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            @Override
            public void valueChanged(javax.swing.event.ListSelectionEvent event) {
                updateTable5();
                updateTable6();
                updateTable7();
                updateTable1();
                updateTable2();

            }
        });
        jTable8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable8.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane8.setViewportView(jTable8);

        jButton16.setText("Add");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setText("Edit");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton18.setText("Delete");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jScrollPane8)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jButton16)
                .addGap(18, 18, 18)
                .addComponent(jButton17)
                .addGap(18, 18, 18)
                .addComponent(jButton18)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton16)
                    .addComponent(jButton17)
                    .addComponent(jButton18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Elderly Person", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if(getSelectedElderly() != null && this.getSelectedHealthMonitor() != null)
        {
            Object [] fields = new Object[6];
            fields[0] = jTable5.getValueAt(jTable5.getSelectedRow(),0);
            fields[1] = jTable5.getValueAt(jTable5.getSelectedRow(),2);
            fields[2] = jTable5.getValueAt(jTable5.getSelectedRow(),3);
            fields[3] = jTable5.getValueAt(jTable5.getSelectedRow(),4);
            fields[4] = jTable5.getValueAt(jTable5.getSelectedRow(),5);
            fields[5] = jTable5.getValueAt(jTable5.getSelectedRow(),1);
            
            healthMonitoringGUI = new HealthMonitoringGUI();
            healthMonitoringGUI.setVisible(true);
            healthMonitoringGUI.populateFields(fields);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        
        addPerson = new AddPerson();
        addPerson.setType("ELDERLY");
        addPerson.setVisible(true);
        
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        if(getSelectedElderly() != null)
        {
            String [] fields = new String [5];
            fields[0] = jTable8.getValueAt(jTable8.getSelectedRow(),0).toString();
            fields[1] = jTable8.getValueAt(jTable8.getSelectedRow(),1).toString();
            fields[2] = jTable8.getValueAt(jTable8.getSelectedRow(),2).toString();
            fields[3] = jTable8.getValueAt(jTable8.getSelectedRow(),3).toString();
            fields[4] = jTable8.getValueAt(jTable8.getSelectedRow(),4).toString();
            addPerson = new AddPerson();
            addPerson.populateFields(fields);
            addPerson.setType("ELDERLY");
            addPerson.setVisible(true);
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if(getSelectedElderly() != null)
        {
            healthMonitoringGUI = new HealthMonitoringGUI();
            healthMonitoringGUI.setVisible(true);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(getSelectedElderly() != null)
        {
            medicationsMonitoringGUI = new MedicationsMonitoringGUI();
            medicationsMonitoringGUI.setVisible(true);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
        if(getSelectedElderly() != null && this.getSelectedMedicationMonitor()!= null)
        {
            String [] fields = new String[4];
            fields[0] = jTable6.getValueAt(jTable6.getSelectedRow(),0).toString();
            fields[1] = jTable6.getValueAt(jTable6.getSelectedRow(),2).toString();
            fields[2] = jTable6.getValueAt(jTable6.getSelectedRow(),3).toString();
            fields[3] = jTable6.getValueAt(jTable6.getSelectedRow(),1).toString();
            medicationsMonitoringGUI = new MedicationsMonitoringGUI();
            medicationsMonitoringGUI.setVisible(true);
            medicationsMonitoringGUI.populateFields(fields);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(getSelectedElderly() != null)
        {
            doctorAppointmentGUI = new DoctorAppointmentGUI();
            doctorAppointmentGUI.setVisible(true);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(getSelectedElderly() != null && this.getSelectedDoctorAppointment()!= null)
        {
            String [] fields = new String[4];
            fields[0] = jTable7.getValueAt(jTable7.getSelectedRow(),0).toString();
            fields[1] = jTable7.getValueAt(jTable7.getSelectedRow(),2).toString();
            fields[2] = jTable7.getValueAt(jTable7.getSelectedRow(),3).toString();
            fields[3] = jTable7.getValueAt(jTable7.getSelectedRow(),1).toString();
            doctorAppointmentGUI = new DoctorAppointmentGUI();
            doctorAppointmentGUI.setVisible(true);
            doctorAppointmentGUI.populateFields(fields);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        getCaregiverwsProxy().deletePerson("ELDERLY", jTable8.getValueAt(jTable8.getSelectedRow(),0).toString());
        Main.caregiverGUI.updateTable8();
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if(getSelectedElderly() != null && getSelectedMedicationMonitor()!= null)
        {
            caregiverwsProxy.deleteMonitor(getSelectedMedicationMonitor(), getSelectedElderly());
            Main.caregiverGUI.updateTable6();
         
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        if(getSelectedElderly() != null && getSelectedHealthMonitor() != null)
        {
            caregiverwsProxy.deleteMonitor(getSelectedHealthMonitor(), getSelectedElderly());
            Main.caregiverGUI.updateTable5();
         
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(getSelectedElderly() != null && getSelectedDoctorAppointment()!= null)
        {
            caregiverwsProxy.deleteMonitor(getSelectedDoctorAppointment(), getSelectedElderly());
            Main.caregiverGUI.updateTable7();
         
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        addPerson = new AddPerson();
        addPerson.setType("CAREGIVER");
        addPerson.setVisible(true);
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        if(getSelectedElderly() != null)
        {
            String [] fields = new String [5];
            fields[0] = jTable1.getValueAt(jTable8.getSelectedRow(),0).toString();
            fields[1] = jTable1.getValueAt(jTable8.getSelectedRow(),1).toString();
            fields[2] = jTable1.getValueAt(jTable8.getSelectedRow(),2).toString();
            fields[3] = jTable1.getValueAt(jTable8.getSelectedRow(),3).toString();
            fields[4] = jTable1.getValueAt(jTable8.getSelectedRow(),4).toString();
            addPerson = new AddPerson();
            addPerson.populateFields(fields);
            addPerson.setType("CAREGIVER");
            addPerson.setVisible(true);
        }

    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        addPerson = new AddPerson();
        addPerson.setType("FAMILY_MEMBER");
        addPerson.setVisible(true);
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        if(getSelectedElderly() != null)
        {
            String [] fields = new String [5];
            fields[0] = jTable2.getValueAt(jTable8.getSelectedRow(),0).toString();
            fields[1] = jTable2.getValueAt(jTable8.getSelectedRow(),1).toString();
            fields[2] = jTable2.getValueAt(jTable8.getSelectedRow(),2).toString();
            fields[3] = jTable2.getValueAt(jTable8.getSelectedRow(),3).toString();
            fields[4] = jTable2.getValueAt(jTable8.getSelectedRow(),4).toString();
            addPerson = new AddPerson();
            addPerson.populateFields(fields);
            addPerson.setType("FAMILY_MEMBER");
            addPerson.setVisible(true);
        }
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        getCaregiverwsProxy().deletePerson("CAREGIVER", jTable1.getValueAt(jTable1.getSelectedRow(),0).toString());
        Main.caregiverGUI.updateTable1();
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        getCaregiverwsProxy().deletePerson("FAMILY_MEMBER", jTable2.getValueAt(jTable2.getSelectedRow(),0).toString());
        Main.caregiverGUI.updateTable2();
    }//GEN-LAST:event_jButton24ActionPerformed

    public static boolean initConnection() {
        
        try
        {
            Caregiverws_Service service = new Caregiverws_Service();
            caregiverwsProxy = service.getCaregiverwsPort();
            ((BindingProvider) getCaregiverwsProxy()).getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY,Main.getServerURL() +"/caregiverws");
            ((BindingProvider) getCaregiverwsProxy()).getRequestContext().put(BindingProvider.USERNAME_PROPERTY,Main.getUsername());
            ((BindingProvider) getCaregiverwsProxy()).getRequestContext().put(BindingProvider.PASSWORD_PROPERTY,Main.getPassword());   
            getCaregiverwsProxy().getType();
            return true;
        }
        catch(Exception e)
        {
            return false;
        }
    }

    
    public void updateTable8()
    {
        
        try
        {
            JSONArray tmp = new JSONArray(getCaregiverwsProxy().getElderlysInfo()); 
            DefaultTableModel model = (DefaultTableModel) jTable8.getModel();
            model.setRowCount(0);
            for (int i=0;i<tmp.length();i++)
            {
                String [] stringArray = new String[5];
                stringArray[0] = tmp.getJSONObject(i).getString("username");
                stringArray[1] = tmp.getJSONObject(i).getString("first_name");
                stringArray[2] = tmp.getJSONObject(i).getString("last_name");
                stringArray[3] = tmp.getJSONObject(i).getString("email_address");
                stringArray[4] = tmp.getJSONObject(i).getString("mobile_number");
                model.addRow(stringArray);
                
            }
            model.fireTableDataChanged();  
        }
        catch(Exception e)
        {
            
        }
    }
    
   public void updateTable5()
    {   
        try
        {
            JSONArray tmp = new JSONArray(getCaregiverwsProxy().getElderlyHealthMonitors(jTable8.getValueAt(jTable8.getSelectedRow(),0).toString())); 
            DefaultTableModel model = (DefaultTableModel) jTable5.getModel();
            model.setRowCount(0);
            for (int i=0;i<tmp.length();i++)
            {
                Object [] stringArray = new Object[6];
                stringArray[0] = tmp.getJSONObject(i).getLong("id");
                stringArray[1] = tmp.getJSONObject(i).getString("schedule");
                stringArray[2] = tmp.getJSONObject(i).getBoolean("bloodPressure");
                stringArray[3] = tmp.getJSONObject(i).getBoolean("bloodSugar");
                stringArray[4] = tmp.getJSONObject(i).getBoolean("heartBeat");
                stringArray[5] = tmp.getJSONObject(i).getString("note");
                model.addRow(stringArray);
            }
            model.fireTableDataChanged();  
        }
        catch(Exception e)
        {
            
        }
    }
    
   
   public void updateTable6()
    {   
        try
        {
            JSONArray tmp = new JSONArray(getCaregiverwsProxy().getElderlyMedicationMonitors(jTable8.getValueAt(jTable8.getSelectedRow(),0).toString())); 
            DefaultTableModel model = (DefaultTableModel) jTable6.getModel();
            model.setRowCount(0);
            for (int i=0;i<tmp.length();i++)
            {
                Object [] stringArray = new Object[4];
                stringArray[0] = tmp.getJSONObject(i).getLong("id");
                stringArray[1] = tmp.getJSONObject(i).getString("schedule");
                stringArray[2] = tmp.getJSONObject(i).getString("medicationName");
                stringArray[3] = tmp.getJSONObject(i).getString("note");
                model.addRow(stringArray);
            }
            model.fireTableDataChanged();  
        }
        catch(Exception e)
        {
            
        }
    }
   
   public void updateTable7()
    {   
        try
        {
            JSONArray tmp = new JSONArray(getCaregiverwsProxy().getElderlyDoctorAppointments(jTable8.getValueAt(jTable8.getSelectedRow(),0).toString())); 
            DefaultTableModel model = (DefaultTableModel) jTable7.getModel();
            model.setRowCount(0);
            for (int i=0;i<tmp.length();i++)
            {
                Object [] stringArray = new Object[4];
                stringArray[0] = tmp.getJSONObject(i).getLong("id");
                stringArray[1] = tmp.getJSONObject(i).getString("schedule");
                stringArray[2] = tmp.getJSONObject(i).getString("doctorName");
                stringArray[3] = tmp.getJSONObject(i).getString("note");
                model.addRow(stringArray);
            }
            model.fireTableDataChanged();  
        }
        catch(Exception e)
        {
            
        }
    }
   
   
   
   
   public void updateTable1()
    {   
        try
        {
            JSONArray tmp = new JSONArray(getCaregiverwsProxy().getElderlyCaregivers(jTable8.getValueAt(jTable8.getSelectedRow(),0).toString())); 
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);
            for (int i=0;i<tmp.length();i++)
            {
                String [] stringArray = new String[5];
                stringArray[0] = tmp.getJSONObject(i).getString("username");
                stringArray[1] = tmp.getJSONObject(i).getString("first_name");
                stringArray[2] = tmp.getJSONObject(i).getString("last_name");
                stringArray[3] = tmp.getJSONObject(i).getString("email_address");
                stringArray[4] = tmp.getJSONObject(i).getString("mobile_number");
                model.addRow(stringArray);
            }
            model.fireTableDataChanged();  
        }
        catch(Exception e)
        {
            
        }
    }
   
   public void updateTable2()
    {   
        try
        {
            JSONArray tmp = new JSONArray(getCaregiverwsProxy().getElderlyFamilyMembers(jTable8.getValueAt(jTable8.getSelectedRow(),0).toString())); 
            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
            model.setRowCount(0);
            for (int i=0;i<tmp.length();i++)
            {
                String [] stringArray = new String[5];
                stringArray[0] = tmp.getJSONObject(i).getString("username");
                stringArray[1] = tmp.getJSONObject(i).getString("first_name");
                stringArray[2] = tmp.getJSONObject(i).getString("last_name");
                stringArray[3] = tmp.getJSONObject(i).getString("email_address");
                stringArray[4] = tmp.getJSONObject(i).getString("mobile_number");
                model.addRow(stringArray);
            }
            model.fireTableDataChanged();  
        }
        catch(Exception e)
        {
            
        }
    }
   
   public String getSelectedElderly()
   {
       
       if(jTable8.getSelectedRow() != -1)
           return jTable8.getValueAt(jTable8.getSelectedRow(),0).toString();
       else
           return null;
   }

   public String getSelectedHealthMonitor()
   {
       
       if(jTable5.getSelectedRow() != -1)
           return jTable5.getValueAt(jTable5.getSelectedRow(),0).toString();
       else
           return null;
   }
   public String getSelectedMedicationMonitor()
   {
       
       if(jTable6.getSelectedRow() != -1)
           return jTable6.getValueAt(jTable6.getSelectedRow(),0).toString();
       else
           return null;
   }
   
   public String getSelectedDoctorAppointment()
   {
       
       if(jTable7.getSelectedRow() != -1)
           return jTable7.getValueAt(jTable7.getSelectedRow(),0).toString();
       else
           return null;
   }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable7;
    private javax.swing.JTable jTable8;
    // End of variables declaration//GEN-END:variables
}
